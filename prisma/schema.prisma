// cspell:word datasource autoincrement eedea ffaf fcec eccb dfde srid srtext dbgenerated watermarkposition

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_PRISMA_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
}

model GpsMarker {
  id                String   @id(map: "PK_c244f86d053d66d22ed6d19f7cd") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created           DateTime @default(now()) @db.Timestamp(6)
  updated           DateTime @default(now()) @db.Timestamp(6)
  date              DateTime @db.Timestamp(6)
  latitude          Float
  longitude         Float
  country           String   @db.VarChar(2)
  city              String   @db.VarChar
  ownerId           String   @db.Uuid
  crossAntiMeridian Boolean  @default(false)
  sites             Site     @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7cce4c3c533871d1a20010213be")

  @@map("gps_markers")
}

model Photo {
  id                    String             @id(map: "PK_5220c45b8e32d49d767b9b3d725") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  height                Int
  size                  Int
  thumbnailURL          String             @db.VarChar
  type                  photos_type_enum
  width                 Int
  ownerId               String             @db.Uuid
  user                  User               @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_556eedea27ffaf50a4ee0c0a058")
  site                  Site?
  sites_favicons_photos SiteFaviconPhoto[]
  Post                  Post?

  @@map("photos")
}

model Post {
  id       String   @id(map: "PK_2829ac61eff60fcec60d7274b9e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created  DateTime @default(now()) @db.Timestamp(6)
  location String?  @db.VarChar
  updated  DateTime @default(now()) @db.Timestamp(6)
  title    String?  @db.VarChar
  photoId  String   @unique(map: "REL_c0e6e8c4bd59e6e015fe7cb307") @db.Uuid
  ownerId  String   @db.Uuid
  user     User     @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0e33434a2d18c89a149c8ad6d86")
  photo    Photo    @relation(fields: [photoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_c0e6e8c4bd59e6e015fe7cb307e")

  @@map("posts")
}

model Site {
  id                    String                        @id(map: "PK_4f5eccb1dfde10c9170502595a7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description           String?                       @db.VarChar
  name                  String?                       @db.VarChar
  title                 String?                       @db.VarChar
  imdb                  String?                       @db.VarChar
  twitter               String?                       @db.VarChar
  linkedIn              String?                       @db.VarChar
  instagram             String?                       @db.VarChar
  github                String?                       @db.VarChar
  facebook              String?                       @db.VarChar
  ownerId               String                        @unique(map: "UQ_b00408635dde2a3b0cb6e57de17") @db.Uuid
  domain                String?                       @unique(map: "IDX_4578b679503e1b86cc1c2531b9")
  logoId                String?                       @unique(map: "UQ_30a2845f272f4b824a171ecd3be") @db.Uuid
  resumeUrl             String?                       @db.VarChar
  watermarkPosition     sites_watermarkposition_enum?
  gps_markers           GpsMarker[]
  photos                Photo?                        @relation(fields: [logoId], references: [id], onUpdate: NoAction, map: "FK_30a2845f272f4b824a171ecd3be")
  users                 User                          @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_b00408635dde2a3b0cb6e57de17")
  sites_favicons_photos SiteFaviconPhoto[]

  @@map("sites")
}

model SiteFaviconPhoto {
  sitesId  String @db.Uuid
  photosId String @db.Uuid
  sites    Site   @relation(fields: [sitesId], references: [id], onDelete: Cascade, map: "FK_644cbd25b5502c11c9a4f4c37a4")
  photos   Photo  @relation(fields: [photosId], references: [id], onDelete: Cascade, map: "FK_9266cd2ed6671dd63050807ddc8")

  @@id([sitesId, photosId], map: "PK_0c1914a234ab0a8474933f67af3")
  @@index([sitesId], map: "IDX_644cbd25b5502c11c9a4f4c37a")
  @@index([photosId], map: "IDX_9266cd2ed6671dd63050807ddc")
  @@map("sites_favicons_photos")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model User {
  id       String  @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  githubId Int?    @unique(map: "IDX_42148de213279d66bf94b363bf")
  username String  @unique(map: "IDX_fe0bb3f6520ee0469504521e71") @db.VarChar
  photos   Photo[]
  posts    Post[]
  sites    Site?

  @@map("users")
}

enum photos_type_enum {
  ORIGINAL
  LOGO
  FAVICON
}

enum sites_watermarkposition_enum {
  TOP_LEFT
  TOP_RIGHT
  BOTTOM_LEFT
  BOTTOM_RIGHT
}
