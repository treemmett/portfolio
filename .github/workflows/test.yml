name: Test

on:
  push:
    branches-ignore:
      - main
  workflow_call:
  workflow_run:
    workflows: ['Dependabot PR Check']
    types:
      - completed

jobs:
  setup:
    runs-on: 'ubuntu-latest'
    if: |
      (github.event_name != 'workflow_run') ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    outputs:
      cache: ${{ steps.yarn.outputs.dir }}
    steps:
      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get yarn cache directory path
        id: yarn
        run: echo "::set-output name=dir::$(yarn cache dir)"

  lint:
    runs-on: 'ubuntu-latest'
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache resources
        uses: actions/cache@v3
        with:
          path: |
            ${{ needs.setup.outputs.cache }}
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.json', '**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: lint
        run: yarn lint

  test:
    needs: setup
    runs-on: 'ubuntu-latest'
    services:
      minio:
        # cspell:word bitnami
        env:
          MINIO_DEFAULT_BUCKETS: minio-bucket
          MINIO_FORCE_NEW_KEYS: yes
          MINIO_ROOT_PASSWORD: minio-root-password
          MINIO_ROOT_USER: minio-root-user
        image: bitnami/minio
        ports:
          - 9000:9000
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Cache resources
        uses: actions/cache@v3
        with:
          path: |
            ${{ needs.setup.outputs.cache }}
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.json', '**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: Run Cypress
        uses: cypress-io/github-action@v4
        env:
          AUTHORIZED_USERS: treemmett
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_CLIENT_SECRET: foobar
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JWT_SECRET: foobar
          MOCK: true
          NEXT_PUBLIC_GITHUB_CLIENT_ID: foobar
          NEXT_PUBLIC_GITHUB_USERNAME: treemmett
          NEXT_PUBLIC_INSTAGRAM_USERNAME: treemmett
          NEXT_PUBLIC_LINKEDIN_USERNAME: treemmett
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          NEXT_PUBLIC_NAME: Tregan
          S3_BUCKET: minio-bucket
          S3_KEY: minio-root-user
          S3_KEY_SECRET: minio-root-password
        with:
          browser: chrome
          build: yarn build
          install: false
          record: true
          start: yarn start
          wait-on: 'http://localhost:3000'
