name: Production

on:
  push:
    branches:
      - main

jobs:
  test:
    uses: ./.github/workflows/test.yml
    secrets: inherit
  deploy:
    environment:
      name: production
      url: https://tregan.me
    needs: test
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ needs.setup.outputs.cache }}
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-next-js-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-next-js-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: Pull configuration
        run: yarn vercel pull --yes --environment=production --token=${VERCEL_TOKEN}
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      - name: Remove previous env
        run: |
          vercel env ls production |
          grep -i encrypted |
          awk '/ Encrypted/ {print $1}' |
          xargs -I % vercel env rm % production -y --token=${VERCEL_TOKEN}
      - name: Set env
        run: |
          echo ${{ secrets.JWT_SECRET }}        | yarn vercel env add JWT_SECRET production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.GH_CLIENT_SECRET }}  | yarn vercel env add GITHUB_CLIENT_SECRET production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.CDN_URL }}           | yarn vercel env add CDN_URL production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.AUTHORIZED_USERS }}  | yarn vercel env add AUTHORIZED_USERS production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.S3_BUCKET }}         | yarn vercel env add S3_BUCKET production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.S3_KEY }}            | yarn vercel env add S3_KEY production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.S3_KEY_SECRET }}     | yarn vercel env add S3_KEY_SECRET production --token=${{ secrets.VERCEL_TOKEN }} -y
          echo ${{ secrets.S3_URL }}            | yarn vercel env add S3_URL production --token=${{ secrets.VERCEL_TOKEN }} -y
      - name: Build
        run: yarn vercel build --prod
        env:
          AUTHORIZED_USERS: ${{ secrets.AUTHORIZED_USERS }}
          CDN_URL: ${{ secrets.CDN_URL }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXT_PUBLIC_GITHUB_CLIENT_ID: ${{ secrets.CDN_URL }}
          NEXT_PUBLIC_GITHUB_USERNAME: ${{ secrets.NEXT_PUBLIC_GITHUB_USERNAME }}
          NEXT_PUBLIC_INSTAGRAM_USERNAME: ${{ secrets.NEXT_PUBLIC_INSTAGRAM_USERNAME }}
          NEXT_PUBLIC_LINKEDIN_USERNAME: ${{ secrets.NEXT_PUBLIC_LINKEDIN_USERNAME }}
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          NEXT_PUBLIC_NAME: ${{ secrets.NEXT_PUBLIC_NAME }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_KEY: ${{ secrets.S3_KEY }}
          S3_KEY_SECRET: ${{ secrets.S3_KEY_SECRET }}
          S3_URL: ${{ secrets.S3_URL }}
      - name: Deploy
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: --prebuilt --prod
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
